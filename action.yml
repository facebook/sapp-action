name: sapp
description: Run sapp to convert static analysis results to SARIF format.

inputs:
  filters-directory:
    description: Path to the filters directory containing filters. Default is the filter's directory in pyre-check
    required: false
    default: '~/lib/pyre_check/pysa_filters'
  taint-output:
    description: Path to the taint-output file derived from the static analyzer. Default is ./taint-output.json
    default: './taint-output.json'
  taint-metadata:
    description: Path to the taint-metadata file derived from the static analyzer. Default is ./taint-metadata.json
    default: './taint-metadata.json'
  version:
    description: Version of sapp to be used. Default is latest.
    default: 'latest'
  # consider using working-directory isntead
runs:
  using: "composite"
  steps:
    - run: if [ ${{inputs.version}} = "latest" ]; then pip install fb-sapp; else pip install fb-sapp==${{inputs.version}}; fi
      shell: bash
    - run: if [ ! -f ${{inputs.taint-metadata}} ]; then echo "No such file: "${{inputs.taint-metadata}}; exit 1; fi
      shell: bash
    - run: sapp update warning-codes ${{inputs.taint-metadata}}
      shell: bash
    - run: if [ ! -f ${{inputs.taint-output}} ]; then echo "No such file: "${{inputs.taint-output}}; exit 1; fi
      shell: bash
    - run: sapp analyze ${{inputs.taint-output}}
      shell: bash
    - run: sapp filter issues 1 ${{inputs.filters-directory}} --output-format sarif > sarif.json
      shell: bash
